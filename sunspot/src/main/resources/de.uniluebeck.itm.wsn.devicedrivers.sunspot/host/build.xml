<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="" default="host-run" name="host">

<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->

    <!--
    
    The master build file lives at: ${sunspot.home}/build.xml.

    If you do not have a Sun SPOT properties file for some reason,
    then you can set the sunspot.home property manually.

        <property name="sunspot.home" value="/opt/sunspot"/>

    The behavior of the build is also controled through properties.
    For example, to use a different source directory, you can set
    the property 'src.dir'.

        <property name="src.dir" value="mysrc"/>

    For a complete listing of properties that are used, and their
    explanations, see the file ${sunspot.home}/default.properties.

    -->

    <property name="user.properties.file" value="build.properties"/>
    <property file="${user.home}/.sunspot.properties"/>
    <import file="${sunspot.home}/build.xml"/>

    <!--

    This file imports the master build file for compiling and deploying sunspot
    applications.  This file provides hooks for the user build file, so that
    you can accomplish almost anything without having to rewrite any of the
    build procedures.  However, if need be, you can just look at the imported
    build file to determine how exactly any step is accomplished.

    Of course, another useful way to find out exactly what is happening is to
    run the targets listed below with ant's 'verbose' flag (ant -v).  This will
    display exactly what is happening at each step.

    Some important targets that are defined within the master build file include:
    (Do "ant help" to see the full list.)

      init:                  initialize and check all properties
      help:                  display a useful help message
      environment            displays information about setting up your environment
      sdk-info               displays information about the current SDK installation
      find-spots             locate USB ports where SPOTs are connected
      clean:                 delete all compiled/generated files
      host-compile:          compiles java source files to classes
      host-run               run a host application (requires property main.class)
      make-host-jar          compile source for host execution and build a jar

    The host-run command uses two properties: main.class and main.args. The
    property main.class determines what class is run as your main method. The
    property main.args determines the arguments that are passed to your main
    method. Normally these properties are set in your build.properties file,
    but they can also be set on the ant command line:

        ant -Dmain.class=com.sun... -Dmain.args=.... host-run

    There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are defined as follows:

        For each target above (except help),

        -pre-<target>:  called before the target
        -post-<target>: called after the target

    For example, inserting an echo statement after compilation could look like this:

        <target name="-post-compile">
            <echo>Compile finished!</echo>
        </target>    

    For more information on using ant, see http://ant.apache.org.

    -->

    <!--
    Below is an example target to create Javadoc for your project.

    Note: you must manually edit the packagenames argument with
          the packages that you wish to create Javadoc for.
    -->

    <target depends="init" name="javadoc">
        <delete dir="doc"/>
        <mkdir dir="doc"/>
        <javadoc author="true" destdir="doc" doctitle="My Project -- Host-side (Version 1.0)" packagenames="org.sunspotworld.demo" sourcepath="src" windowtitle="My Project -- Host-side v1.0">
	    <classpath path="${hostagent.compile.classpath}"/>
            <header><![CDATA[<b>My Project -- Host-side<br>v1.0</b>]]></header>
        </javadoc>
    </target>

<target name="my-host-jar" depends="init, host-compile">
    <jar destfile="${build.dir}/myapp.jar"> 
        <fileset dir="${build.dir}" excludes="**.jar"/>            
            <manifest>
                <attribute name="Main-Class" value="${main.class}" /> 
                <attribute name="Class-Path" value="${sunspot.lib}/multihoplib_rt.jar ${sunspot.lib}/spotlib_host.jar ${sunspot.lib}/spotlib_common.jar ${sunspot.lib}/squawk_classes.jar ${sunspot.lib}/RXTXcomm.jar" /> 
            </manifest>
    </jar>
</target>
</project>
